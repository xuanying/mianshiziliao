面试总结：
1.JVM内存结构(https://www.cnblogs.com/jiyukai/p/6665199.html)	 >>>>>>1
2.hashMap和concurrentHashMap实现，扩容原理 	>>>>>+2
3.distinct group by（https://blog.csdn.net/lzj3462144/article/details/78821422）	 >>>>>>>>>>+1
4.tcp,udp区别，以及相关的应用 	>>>>>>>> +1
5.线程与进程的区别，操作系统调度的最小单位（线程），资源分配的最小单位（进程）  >>>>>>+1
6.get,put,post的区别	>>>>>>>>>>+1
7.服务端处理跨域问题     >>>>>>>>>>+1
8.聚簇索引与非聚簇索引的区别　　　>>>>>>>>>> +1
9.事物隔离级别和各自存在的问题　　>>>>>>>>>> +1
10.数据库锁
11.redis实现锁
12.new一个对象jvm内存区域的情况(https://blog.csdn.net/weixin_41005192/article/details/80530530)
13.使用Redis做防止重复提交(http://www.cnblogs.com/dream-to-pku/p/7615139.html)
14.TOP K 问题(https://blog.csdn.net/zyq522376829/article/details/47686867)
15.在浏览器中输入网址，按下回车键后，发生了什么（https://blog.csdn.net/composurext/article/details/78894537）
16.redis哨兵（https://www.cnblogs.com/jaycekon/p/6237562.html)Redis内存回收机制（https://blog.csdn.net/tr1912/article/details/81267910）
17.springboot的路由分发过程（http://blog.sina.com.cn/s/blog_654116410102ygam.html）
18.mbatis如何映射字段和属性
19.数据库主从分离读写复制，主服务器给从服务器发送的信号是什么（https://blog.csdn.net/itcats_cn/article/details/82155651）
20.http请求头中的字段（https://www.cnblogs.com/chunlei36/p/6927365.html）
21.






数据库:

Mysql：

1. 数据库三范式及判断、E-R图(https://zhidao.baidu.com/question/296323938.html)
(https://lixh1986.iteye.com/blog/2357536)

2. innodb和myisam存储引擎的区别(https://www.cnblogs.com/kevingrace/p/5685355.html)

3. 索引分类（主键、唯一索引、全文索引、覆盖索引等等）(https://www.cnblogs.com/chenhaoyu/p/8796146.html)，
最左前缀原则，(https://blog.csdn.net/zzx125/article/details/79678770)哪些条件无法使用索引

4. B树、B+树区别，索引为何使用B+树(https://blog.csdn.net/v_july_v/article/details/6530142)
红黑树全过程（https://blog.csdn.net/v_JULY_v/article/details/6284050）

5. 聚集索引与非聚集索引（使用非聚集索引的查询过程）(https://www.cnblogs.com/s-b-b/p/8334593.html)

6. 事务的ACID（原子性、一致性、隔离性、持久性）

7. 事务隔离级别和各自存在的问题（脏读、不可重复读、幻读）和解决方式(https://www.cnblogs.com/shan-kylin/p/9543294.html)
（间隙锁及MVCC）(https://blog.csdn.net/dhfzhishi/article/details/80277990)

8. 乐观锁和悲观锁、行锁与表锁、共享锁与排他锁（inndob如何手动加共享锁与排他锁）(https://blog.csdn.net/localhost01/article/details/78720727)

9. MVCC（增加两个版本号）及delete、update、select时的具体控制(https://blog.csdn.net/dhfzhishi/article/details/80277990)

10. 死锁判定原理和具体场景(https://blog.csdn.net/XiaHeShun/article/details/81393796)

11. 查询缓慢和解决方式（explain、慢查询日志、show profile等）(https://kujo.iteye.com/blog/2235241)

12. drop、truncate、delete区别(https://blog.csdn.net/johnson_mar/article/details/74352515)

13.查询语句不同元素（where、jion、limit、group by、having等等）执行先后顺序(https://www.cnblogs.com/948046hs/p/9122231.html)

14. mysql优化，读写分离、主从复制(https://www.cnblogs.com/hanyucq/p/5524921.html)

15. 数据库崩溃时事务的恢复机制（REDO日志和UNDO日志）(https://www.jianshu.com/p/20e10ed721d0)
16.distinct与groupby()

Redis:

1.发布订阅

2.数据淘汰机制（好几种）

    volatile-lru：使用LRU算法进行数据淘汰（淘汰上次使用时间最早的，且使用次数最少的key），只淘汰设定了有效期的key
    allkeys-lru：使用LRU算法进行数据淘汰，所有的key都可以被淘汰
    volatile-random：随机淘汰数据，只淘汰设定了有效期的key
    allkeys-random：随机淘汰数据，所有的key都可以被淘汰
    volatile-ttl：淘汰剩余有效期最短的key

3.字典及渐进式rehash

4.RDB与AOF（https://www.cnblogs.com/chenliangcl/p/7240350.html）

5.为何高效（内存数据库、非阻塞IO、IO多路复用、单线程、hash表、跳表等）
6. Redis的几种数据结构
7.使用Redis做缓存需要注意些什么？（https://www.cnblogs.com/wyl-0120/p/10011805.html?utm_source=tuicool&utm_medium=referral）
8.springboot使用redisTemplate整合redis。（https://blog.csdn.net/zhulier1124/article/details/82154937）
（https://www.cnblogs.com/superfj/p/9232482.html）
9.redis超全入门教程（https://www.cnblogs.com/terryguan/p/5505923.html）


推荐：MySQL数据库应用从入门到精通（王飞飞，虽然名字很low）、高性能Mysql、Redis设计与实现、Redis实战 



计算机网络：

1. OSI七层协议、TCP/IP四层协议(https://www.cnblogs.com/awkflf11/p/9190309.html)

2. 各层对应的网络设备（路由器、交换机、网关、网桥、集线器等等），各层对应的协议

3. 数据链路层的CSMA/CD协议，笔试可能会用到

4. IP地址分类，子网划分（https://baike.baidu.com/item/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/5446046?fr=aladdin）

5. TCP和UDP的区别(https://blog.csdn.net/qq_37941471/article/details/80888827),

TCP与UDP区别总结：

	1、TCP面向连接（如打电话要先拨号建立连接）;UDP是无连接的，即发送数据之前不需要建立连接

	2、TCP提供可靠的服务。也就是说，通过TCP连接传送的数据，无差错，不丢失，不重复，且按序到达;UDP尽最大努力交付，即不保证可靠交付

	3、TCP面向字节流，实际上是TCP把数据看成一连串无结构的字节流;UDP是面向报文的

	UDP没有拥塞控制，因此网络出现拥塞不会使源主机的发送速率降低（对实时应用很有用，如IP电话，实时视频会议等）

	4、每一条TCP连接只能是点到点的;UDP支持一对一，一对多，多对一和多对多的交互通信

	5、TCP首部开销20字节;UDP的首部开销小，只有8个字节

	6、TCP的逻辑通信信道是全双工的可靠信道，UDP则是不可靠信道
tcp,udp各自的应用（）

6. TCP三次握手和四次挥手，为什么三次握手，为什么四次挥手(https://blog.csdn.net/albertsh/article/details/81044150)

7. TCP精髓问题：停止等待协议、连续ARQ协议、滑动窗口、流量控制、拥塞控制（慢开始、拥塞避免、快重传、快恢复）

8. 从浏览器输入www.baidu.com到加载出页面发生了什么

9. GET和POST区别(https://www.cnblogs.com/kexianting/p/8448539.html)

10. HTTP状态码，HTTP1.0和HTTP1.1区别

11. HTTP缓存机制（cache-control、Expires之类的一系列请求与相应报头字段）

12. session和cookie的区别，禁用cookie后怎么办

13. DNS解析的过程(https://blog.csdn.net/john1337/article/details/82991472)
14. 常用协议的端口
--------------------- 

推荐：计算机网络（谢希仁）、TCP/IP详解、HTTP权威指南，大神可以看一下RCF2616之类的




Linux:

1. 常用命令：用户控制、权限控制、进程控制、系统状态查询之类的

2. Linux状态分析：CPU（top）、内存（top和free，注意buffer和cache区别）、磁盘（fdisk和df）、IO（iostat）等

3. grep和sed

4. awk（用好awk，脚本写得好）

5. shell脚本

6. Linux目录结构（尤其是/proc非常重要）

7. linux文件系统结构和启动流程
8. 防火墙iptables（这个比较少）

推荐：鸟哥私房菜、视频（马哥的一套 http://pan.baidu.com/s/1pL3HGT1）

操作系统：

1. 一个二进制文件运行出结果，操作系统做了什么（这是一个很全面的题）

2. 死锁的条件及银行家算法、资源分配图之类的

3. 进程间通信方式

4. linux的五种IO方式（阻塞与非阻塞、同步与异步的理解）

5. linux的select、poll、epoll的区别

6. 进程与线程区别、内核级线程与用户级线程

7. 页面置换算法，尤其是lru

8. 进程调度算法

9. linux中断响应机制
10. 虚拟内存机制

推荐：现代操作系统、网易云课堂的北大公开课 

java:

1. java面向对象

2. 多线程实现的几种方式（Thread、Runnable、Callable、线程池）及各自的特点

3. java线程的状态及相互转换

4. 线程同步的几种方式和线程间通信(https://blog.csdn.net/u011514810/article/details/77131296)

5. ArrayList和LinkedList内部的实现大致是怎样的？他们之间的区别和优缺点？(https://www.cnblogs.com/ConfidentLiu/p/7092273.html)

6. HashMap实现原理，如何保证HashMap的线程安全(https://www.jianshu.com/p/f6730d5784ad)

7. JVM内存结构(https://www.cnblogs.com/jiyukai/p/6665199.html)，为什么需要GC(https://blog.csdn.net/qq_34309305/article/details/79226513)

8. JVM的垃圾回收机制，以及回收算法有哪些()

9. JVM什么时候会触发YGC，什么时候触发FGC？(https://blog.csdn.net/ITzhangdaopin/article/details/78737641)

10.JVM如何内存调优、内存泄漏如何排查(https://www.cnblogs.com/csniper/p/5592593.html)

11. Spring框架中IOC的原理是什么？https://blog.csdn.net/love_everybody/article/details/79836136

12. 用Spring如何实现一个切面？(https://blog.csdn.net/zhuzhezhuzhe1/article/details/80565067)

13. Spring 数据库事务

14.常见的设计模式、手写一个单例、JDK、Spring原理里有哪些采用了设计模式。

15.多线程与高并发的关系和区别

16.常见的高并发场景有哪些，对应的架构设计方案是什么。

17.介绍完整的分布式中间件有哪些，各自的应用场景和作用。(http://youzhixueyuan.com/ali-p8-architect-talk-message-middleware-selection-and-usage-scenarios.html)

18.双11秒杀活动，你的技术架构设计思路（https://blog.csdn.net/xxxcyzyy/article/details/88264510）

19.枚举类


其他：

hadoop：mapreduce、HDFS、yarn等等（推荐：Hadoop权威指南）

hive：很常用的处理工具（推荐：Hive编程指南）

消息队列（kafka之类的）、远程过程调用RPC之类，写一些Demo自己试一下，不要被问直接就不知道
负载均衡调度（一致性哈希经常问）等

当然，还有很多其他知识。 
